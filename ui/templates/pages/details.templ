package pages

import "github.com/marqeta/pr-bot/opa/input"
import "github.com/marqeta/pr-bot/ui/templates/components"
import "strconv"
import "github.com/marqeta/pr-bot/opa/evaluation"

func getTitle(report *evaluation.Report) string {
	return report.Input.PullRequest.GetTitle()
}

func getAuthor(report *evaluation.Report) string {
	return report.Input.PullRequest.GetUser().GetLogin()
}

func getOrg(report *evaluation.Report) string {
	return report.Input.Repository.GetOwner().GetLogin()
}

func getRepo(report *evaluation.Report) string {
	return report.Input.Repository.GetName()
}

func getPRNumber(report *evaluation.Report) string {
	return strconv.Itoa(report.Input.PullRequest.GetNumber())
}

templ Container(page templ.Component) {
	<div class="lg:container lg:mx-auto px-4">
		@page
	</div>
}

templ DetailsPage(nav, metadata, breakdown, input templ.Component) {
	@nav
	@metadata
	@breakdown
	@input
}

templ Navbar(title string) {
	<div class="navbar bg-base-300">
		<div class="navbar-center">
			<a class="btn btn-ghost font-bold text-2xl">{ title }</a>
		</div>
	</div>
}

templ Metadata(left, right templ.Component) {
	<div class="flex flex-col lg:flex-row my-6 items-center">
		<div class="basis-1/3">
			@left
		</div>
		<div class="divider lg:divider-horizontal"></div>
		<div class="basis-2/3">
			@right
		</div>
	</div>
}

templ EventDetails(report *evaluation.Report) {
	<div class="grid grid-row-3 gap-4 place-content-evenly">
		<!-- PR details -->
		<div
			class="grid grid-cols-1 md:grid-cols-3 gap-4 place-content-evenly justify-items-center md:justify-items-start"
		>
			<div class="md:col-span-2">
				<p class="text-xl font-bold leading-7 pb-2">Title</p>
				<p class="text-base leading-6">{ getTitle(report) }</p>
			</div>
			@components.DL("Author", getAuthor(report))
			@components.DL("Org", getOrg(report))
			@components.DL("Repo", getRepo(report))
			@components.DL("PR", getPRNumber(report))
			@components.DL("Event", report.Input.Event)
			@components.DL("Action", report.Input.Action)
			@components.DLTiny("Request ID", report.RequestID)
		</div>
		<div class="divider"></div>
		<div class="grid grid-flow-row md:grid-flow-col gap-4 shadow justify-items-center">
			@components.OverallEvalDecision(report.Outcome.Result, report.Outcome.Err)
			@components.DLTiny("Delivery ID", report.DeliveryID)
			@components.DLTiny("Policy Version", report.PolicyVersion)
		</div>
	</div>
}

templ BreakdownSection(modules []string, report *evaluation.Report) {
	<div class={ "divider", components.GetDividerColor(report.Outcome.Result, report.Outcome.Err), "font-bold", "text-2xl" }>
		Evaluation Details
	</div>
	<ul class="timeline timeline-vertical">
		for i, module := range modules {
			if i == 0 {
				@components.Breakdown(module, report.Breakdown[module], false, true)
			} else if i == len(modules) - 1 {
				@components.Breakdown(module, report.Breakdown[module], true, false)
			} else {
				@components.Breakdown(module, report.Breakdown[module], true, true)
			}
		}
	</ul>
}

templ InputSection(model *input.Model) {
	<div class="collapse collapse-plus bg-base-200">
		<input type="radio" name="my-accordion-3"/>
		<div class="collapse-title text-xl font-medium">
			Input - JSON
		</div>
		<div class="collapse-content">
			<div class="mockup-code">
				@templ.Raw(components.SyntaxHighlight(model))
			</div>
		</div>
	</div>
}
