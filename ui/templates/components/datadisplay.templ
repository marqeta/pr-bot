package components

import "github.com/marqeta/pr-bot/opa/types"

func GetColor(result types.Result, err error) string {
	if err != nil {
		return "accent"
	} else if result.Review.Type == types.Approve {
		return "success"
	} else if result.Review.Type == types.RequestChanges {
		return "error"
	} else if result.Review.Type == types.Comment {
		return "warning"
	}
	// SKIP
	return "base-content"
}

func GetTextColor(result types.Result, err error) string {
	return "text-" + GetColor(result, err)
}

func GetDividerColor(result types.Result, err error) string {
	return "divider-" + GetColor(result, err)
}

templ GetIcon(result types.Result, err error) {
	if err != nil {
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6, h-6">
			<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm3 10.5a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0 0 1.5h6Z" clip-rule="evenodd"></path>
		</svg>
	} else if result.Review.Type == types.Approve {
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6, h-6">
			<path fill-rule="evenodd" d="M8.603 3.799A4.49 4.49 0 0 1 12 2.25c1.357 0 2.573.6 3.397 1.549a4.49 4.49 0 0 1 3.498 1.307 4.491 4.491 0 0 1 1.307 3.497A4.49 4.49 0 0 1 21.75 12a4.49 4.49 0 0 1-1.549 3.397 4.491 4.491 0 0 1-1.307 3.497 4.491 4.491 0 0 1-3.497 1.307A4.49 4.49 0 0 1 12 21.75a4.49 4.49 0 0 1-3.397-1.549 4.49 4.49 0 0 1-3.498-1.306 4.491 4.491 0 0 1-1.307-3.498A4.49 4.49 0 0 1 2.25 12c0-1.357.6-2.573 1.549-3.397a4.49 4.49 0 0 1 1.307-3.497 4.49 4.49 0 0 1 3.497-1.307Zm7.007 6.387a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clip-rule="evenodd"></path>
		</svg>
	} else if result.Review.Type == types.RequestChanges {
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6, h-6">
			<path fill-rule="evenodd" d="M12 5.25c1.213 0 2.415.046 3.605.135a3.256 3.256 0 0 1 3.01 3.01c.044.583.077 1.17.1 1.759L17.03 8.47a.75.75 0 1 0-1.06 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 0 0-1.06-1.06l-1.752 1.751c-.023-.65-.06-1.296-.108-1.939a4.756 4.756 0 0 0-4.392-4.392 49.422 49.422 0 0 0-7.436 0A4.756 4.756 0 0 0 3.89 8.282c-.017.224-.033.447-.046.672a.75.75 0 1 0 1.497.092c.013-.217.028-.434.044-.651a3.256 3.256 0 0 1 3.01-3.01c1.19-.09 2.392-.135 3.605-.135Zm-6.97 6.22a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 1 0 1.06 1.06l1.752-1.751c.023.65.06 1.296.108 1.939a4.756 4.756 0 0 0 4.392 4.392 49.413 49.413 0 0 0 7.436 0 4.756 4.756 0 0 0 4.392-4.392c.017-.223.032-.447.046-.672a.75.75 0 0 0-1.497-.092c-.013.217-.028.434-.044.651a3.256 3.256 0 0 1-3.01 3.01 47.953 47.953 0 0 1-7.21 0 3.256 3.256 0 0 1-3.01-3.01 47.759 47.759 0 0 1-.1-1.759L6.97 15.53a.75.75 0 0 0 1.06-1.06l-3-3Z" clip-rule="evenodd"></path>
		</svg>
	} else if result.Review.Type == types.Comment {
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6, h-6">
			<path fill-rule="evenodd" d="M4.848 2.771A49.144 49.144 0 0 1 12 2.25c2.43 0 4.817.178 7.152.52 1.978.292 3.348 2.024 3.348 3.97v6.02c0 1.946-1.37 3.678-3.348 3.97a48.901 48.901 0 0 1-3.476.383.39.39 0 0 0-.297.17l-2.755 4.133a.75.75 0 0 1-1.248 0l-2.755-4.133a.39.39 0 0 0-.297-.17 48.9 48.9 0 0 1-3.476-.384c-1.978-.29-3.348-2.024-3.348-3.97V6.741c0-1.946 1.37-3.68 3.348-3.97ZM6.75 8.25a.75.75 0 0 1 .75-.75h9a.75.75 0 0 1 0 1.5h-9a.75.75 0 0 1-.75-.75Zm.75 2.25a.75.75 0 0 0 0 1.5H12a.75.75 0 0 0 0-1.5H7.5Z" clip-rule="evenodd"></path>
		</svg>
	} else {
		// SKIP
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6, h-6">
			<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm3 10.5a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0 0 1.5h6Z" clip-rule="evenodd"></path>
		</svg>
	}
}

templ DLL(term, def, link string) {
	<div>
		<p class="text-xl font-bold leading-7 pb-2">{ term }</p>
		<a class="link link-info leading-6" href={ templ.URL(link) }>{ def }</a>
	</div>
}

templ DL(term, def string) {
	<div>
		<p class="text-xl font-bold leading-7 pb-2">{ term }</p>
		<p class="text-base leading-6">{ def }</p>
	</div>
}

templ DLTiny(term, def string) {
	<div>
		<p class="text-xl font-bold leading-7 pb-2">{ term }</p>
		<p class="text-xs leading-6">{ def }</p>
	</div>
}

templ OverallEvalDecision(result types.Result, err error) {
	<div class="stat">
		<div class={ "stat-figure", GetTextColor(result, err) }>
			@GetIcon(result, err)
		</div>
		<div class="stat-title">Evaluation Decision</div>
		<div class={ "stat-value", GetTextColor(result, err) }>{ GetReviewType(result, err) }</div>
		<div class="stat-desc">{ getReviewBody(result, err) }</div>
	</div>
}

templ Stat(term, def string) {
	<div class="stat">
		<p class="text-xl font-bold leading-7">{ term }</p>
		<p class="text-base leading-6">{ def }</p>
	</div>
}

func GetReviewType(result types.Result, err error) string {
	if err != nil {
		return "Error"
	} else if result.Review.Type == types.Approve {
		return "Approved"
	} else if result.Review.Type == types.RequestChanges {
		return "Changes Requested"
	} else if result.Review.Type == types.Comment {
		return "Comment"
	}
	// SKIP
	return "Skip"
}

func getReviewBody(result types.Result, err error) string {
	if err != nil {
		return err.Error()
	}
	return result.Review.Body
}
